// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes

// This file is automatically generated. DO NOT EDIT, all your changes would be lost.
import 'package:flutter_state/model/top_news_list_entity.dart';
import 'package:flutter_state/generated/json/top_news_list_entity_helper.dart';
import 'package:flutter_state/model/user_entity.dart';
import 'package:flutter_state/generated/json/user_entity_helper.dart';
import 'package:flutter_state/model/history_list_bean_entity.dart';
import 'package:flutter_state/generated/json/history_list_bean_entity_helper.dart';

class JsonConvert<T> {
	T fromJson(Map<String, dynamic> json) {
		return _getFromJson<T>(runtimeType, this, json);
	}

  Map<String, dynamic> toJson() {
		return _getToJson<T>(runtimeType, this);
  }

  static _getFromJson<T>(Type type, data, json) {
    switch (type) {			case TopNewsListEntity:
			return topNewsListEntityFromJson(data as TopNewsListEntity, json) as T;			case TopNewsListResult:
			return topNewsListResultFromJson(data as TopNewsListResult, json) as T;			case TopNewsListResultData:
			return topNewsListResultDataFromJson(data as TopNewsListResultData, json) as T;			case UserEntity:
			return userEntityFromJson(data as UserEntity, json) as T;			case HistoryListBeanEntity:
			return historyListBeanEntityFromJson(data as HistoryListBeanEntity, json) as T;			case HistoryListBeanResult:
			return historyListBeanResultFromJson(data as HistoryListBeanResult, json) as T;    }
    return data as T;
  }

  static _getToJson<T>(Type type, data) {
		switch (type) {			case TopNewsListEntity:
			return topNewsListEntityToJson(data as TopNewsListEntity);			case TopNewsListResult:
			return topNewsListResultToJson(data as TopNewsListResult);			case TopNewsListResultData:
			return topNewsListResultDataToJson(data as TopNewsListResultData);			case UserEntity:
			return userEntityToJson(data as UserEntity);			case HistoryListBeanEntity:
			return historyListBeanEntityToJson(data as HistoryListBeanEntity);			case HistoryListBeanResult:
			return historyListBeanResultToJson(data as HistoryListBeanResult);    }
    return data as T;
  }
  //Go back to a single instance by type
  static _fromJsonSingle(String type, json) {
    switch (type) {			case 'TopNewsListEntity':
			return TopNewsListEntity().fromJson(json);			case 'TopNewsListResult':
			return TopNewsListResult().fromJson(json);			case 'TopNewsListResultData':
			return TopNewsListResultData().fromJson(json);			case 'UserEntity':
			return UserEntity().fromJson(json);			case 'HistoryListBeanEntity':
			return HistoryListBeanEntity().fromJson(json);			case 'HistoryListBeanResult':
			return HistoryListBeanResult().fromJson(json);    }
    return null;
  }

  //empty list is returned by type
  static _getListFromType(String type) {
    switch (type) {			case 'TopNewsListEntity':
			return List<TopNewsListEntity>();			case 'TopNewsListResult':
			return List<TopNewsListResult>();			case 'TopNewsListResultData':
			return List<TopNewsListResultData>();			case 'UserEntity':
			return List<UserEntity>();			case 'HistoryListBeanEntity':
			return List<HistoryListBeanEntity>();			case 'HistoryListBeanResult':
			return List<HistoryListBeanResult>();    }
    return null;
  }

  static M fromJsonAsT<M>(json) {
    String type = M.toString();
    if (json is List && type.contains("List<")) {
      String itemType = type.substring(5, type.length - 1);
      List tempList = _getListFromType(itemType);
      json.forEach((itemJson) {
        tempList
            .add(_fromJsonSingle(type.substring(5, type.length - 1), itemJson));
      });
      return tempList as M;
    } else {
      return _fromJsonSingle(M.toString(), json) as M;
    }
  }
}